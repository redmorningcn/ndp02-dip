#ifndef  _CardDrive_h_
#define  _CardDrive_h_

#define			PLUG_IN_CARD		1
#define			NO_PLUG_IN_CARD		0


#define		AT45DB041	0x1c							//512K 卡	
#define		AT45DB161	0x2C							//2M   卡	
#define		AT45DB321	0x34							//4M   卡	
#define		AT45DB642	0x3c							//8M   卡	

//----------------------------------------------------------------------------------------
//  名  称 ：void InitICCard(void)
//  功  能 ：设置IO口 进行模拟总线对IC卡进行操作
// 入口参数：无
// 出口参数：无
//-----------------------------------------------------------------------------------------
extern	void InitICCard(void);

//---------------------------------------------------------------------
// 名    称：   void   PlugCard( void )
// 功    能：   判断是否有卡片插入
// 入口参数：   无
// 出口参数：   无
//---------------------------------------------------------------------
extern	void   PlugCard( void );

//-------------------------------------------------------------------------------
//Status Register Format:
//   -----------------------------------------------------------------------
//  |  bit7  |  bit6   |  bit5  |  bit4  |  bit3  |  bit2  |  bit1  |  bit0  |
//  |--------|---------|---------|--------|---------|---------|---------|--------|
//  |RDY/BUSY|  COMP  |   0    |   1    |   1    |   1    |   X    |   X    | */
//
//bit7 - 忙标记，0为忙1为不忙
//当Status Register的位0移出之后，接下来的时钟脉冲序列将使SPI器件继续将最新的状态字节送出。
//bit6 - 标记最近一次Main Memory Page和Buffer的比较结果，0相同，1不同。
//bit5
//bit4
//bit3
//bit2 - 这4位用来标记器件密度，对于AT45DB041B，这4位应该是0111，一共能标记16种不同密度的器件
//bit1
//bit0 - 这2位暂时无效
//函数实现对AT45DB041D芯片状态字读出功能
//-------------------------------------------------------------------------------
extern	uint8   StatusRegisterRead_Card(void);

//---------------------------------------------------------------------
//名    称：   ReadCard(uint32 Addr,uint32 *buf,uint32 Len)
//功    能：   将指定区IC卡值读出。
//入口参数：   Addr    读取数据的地址       地址：0~Sizeof(IC)
//             buf     读取后放置的缓冲区
//             Len     读出的数据长度  以8位的数据为长度单位
//出口参数：   无
//----------------------------------------------------------------------
extern	uint8 ReadCard(uint32 Addr,uint8 *TargetBuf,uint32 Len);

//---------------------------------------------------------------------
// 名    称：   WriteCard()
// 功    能：   指定缓冲区数据编程。
// 入口参数：   Addr    编程地址(内部地址)
//						地址从00 ~ CARD_SIZE  
//
//              buf     编程数据缓冲区 注意：此为16位字

//              Len     编程数据长度  以8位的写入数据为长度单位，相当于 Len 个字节数目

// 出口参数：   返回TRUE表示操作成功，返回FALSE表示操作失败
//---------------------------------------------------------------------
extern	uint8 WriteCard(uint32 Addr,uint8 *SourceBuf,uint16 Len);

//---------------------------------------------------------------------
// 名    称：   void   HoldCard( void )
// 功    能：   IC卡插入维护
// 入口参数：   无
// 出口参数：   无
//---------------------------------------------------------------------
extern	void   HoldCard( void );

//---------------------------------------------------------------------
// 名    称：   uint8   GetPlugFlg()
// 功    能：   返回插卡标志
// 入口参数：   无
// 出口参数：   TRUE:有卡插入,FALSE:无卡插入 
//---------------------------------------------------------------------
extern	uint8   GetPlugFlg(void);

//---------------------------------------------------------------------
// 名    称：   uint8   PlugICCard(void)
// 功    能：   判断是否插入IC卡
// 入口参数：   无
// 出口参数：   TRUE:有卡插入,FALSE:无卡插入 
//---------------------------------------------------------------------
extern	uint8 PlugICCard(void);

//---------------------------------------------------------------------
// 名    称：   uint8   GetCardErrorFlg()
// 功    能：   返回插卡错误标志
// 入口参数：   无
// 出口参数：   TRUE:有卡插入,FALSE:无卡插入 
//---------------------------------------------------------------------
extern	uint8   GetCardErrorFlg(void);

//------------------------------------------------------------------------
// 名    称：   void   InitCardInfo(void)				//初始化IC卡信息
// 功    能：   初始化IC卡参数     	
// 入口参数：  
// 出口参数：	
//------------------------------------------------------------------------
extern	void   InitCardInfo(void);

//---------------------------------------------------------------------
// 名    称：   void   TestICCard(void)
// 功    能：   IC卡测试
// 入口参数：   无
// 出口参数：   无
//---------------------------------------------------------------------
extern	uint8   TestICCard(void);

//---------------------------------------------------------------------
// 名    称：   uint32 GetToEndLen(uint32 Addr)
// 功    能：   指定到指定地址到卡的结束的长度
// 入口参数：   Addr    指定地址
// 出口参数：   返回长度
//---------------------------------------------------------------------
extern	uint32 GetToEndLen(uint32 Addr);

//------------------------------------------------------------------------
// 名    称：   uint32   GetCardPageSize(void)			//取IC卡页大小
// 功    能：   初始化IC卡参数     	
// 入口参数：  
// 出口参数：	
//------------------------------------------------------------------------
extern	uint32   GetCardPageSize(void);							//取IC卡页大小

//---------------------------------------------------------------------
// 名    称：   void   GetLongTimePlugCardErrFlg( void )
// 功    能：   长时间插入IC卡错误
// 入口参数：   无
// 出口参数：   无
//---------------------------------------------------------------------
extern	uint8   GetLongTimePlugCardErrFlg( void );

//-------------------------------------------------------------------------------------------------
//函数名称:            	uint8  JudgeCardError(void) 
//函数功能:             对IC卡的卡类型进行判断
//入口参数:            
//出口参数:             
//--------------------------------------------------------------------------------------------------
extern	uint8  JudgeCardError(void) ;

//---------------------------------------------------------------------
// 名    称：   void   LongTimePlugCard( void )
// 功    能：   长时间插入IC卡错误
// 入口参数：   无
// 出口参数：   无
//---------------------------------------------------------------------
extern	uint8   LongTimePlugCard( void );
#endif

